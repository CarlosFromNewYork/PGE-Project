A sketch of interface to communicate tester:

# Fetch available features and menu items to show the tester in Editor's testing menu
cmd --menu

Report a list of available features and extra menu items and their commands
are can be received by Tester
{
	"features":
		{"hotplug-test":true,  /*Supports background changing of testing level without restarting of engine*/
		 "engine-name":"LunaTester", /*Name of test engine sub-menu */
		 "icon-file":"relative path to ICO/ICNS/PNG file to show it as in-tester icon",
		 "level-testing":true, /*Level testing support */
		 "world-testing":true},/*World map testing support*/
	 "commands":[<list of commands>...], /*Extra commands*/
	 "flags":[<list of flags>...],      /*togglable flags*/
	 "data-format":"smbx64" /* Level and world maps data formats */
	 "test-engine-filters":["smbx.exe","smbx.legacy","asmbxt.exe","a2mbxt.exe"],
	 "test-engine-important-files":["LunaDLL.dll","lunadll.dll"]
}

// Command
{"name":"Reset checkpoint",
 "tooltip":"Allows to turn off OpenGL engine",
 "type":"send", /*PreSend (send before of level execution), Send (command to send while tester is working) or Exec (to run a tester from scratch with specified extra flag)*/
 "exec-flags":[<list of on-exec flags>],
 "command-name":"reset-cp", /*Internal name of command*/
 "alias":"Ctrl+F7",
 "order":1 /* Order factor inside of the menu list (after of leading "test level" and "test world" commands)*/
}

// Togglable flag which can be appended to execution command or can be toggled while runtime
{"name":"Disable OpenGL",
 "tooltip":"Allows to turn off OpenGL engine",
 "switch-mode":"on-exec,on-run",
 "exec-flag-name-on":"--no-opengl",
 "exec-flag-name-off":"",
 "flag-name":"nogl", /*Internal name of the flag*/
 "default-value":"off"
}


 # Initialize tester to be ready for running of level/world testing
cmd --exec <path> --workdir <full-path-to-work-directory>

//Allowed commands
{
"cmd":"run-level-test",
"setup":
	{"show-fps":false,
	 "show-debug-info":false,
	 "show-debug-physics":false,
	 "worldmap-freedom":false,
	 "enable-god":false,
	 "players":[["id":1, "character":1, "state":4, "vehicle": 1, "vehicle-type": 4], ...]},
"raw-data":"...." /*Raw level data file in the originally requested file format*/
}

{
"cmd":"set-flag",
"name":"nogl",
"state":"off"
}

{
"cmd":"reset-cp"
}

# If tester app is running under Wine and the received path are in Linux/macOS local format,
there are must be auto-converted into Wine-internal path (Z:/home/user/etc....)


The in-work interface must use stdin/stdout pipes or any other way to pass data.
