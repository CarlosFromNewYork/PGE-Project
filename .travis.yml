#----------------------------------------------------------------------------
#
# Platform Game Engine Project by Wohlstand, a free platform for making games of platform genre
# Copyright (c) 2014-2015 Vitaly Novichkov <admin@wohlnet.ru>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#----------------------------------------------------------------------------
# Travis-CI building configuration file for Mac OS X Operating system
#                       created 2015-11-26
#----------------------------------------------------------------------------

env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "eZjlsg6iAuRaU2qiofJUOFT8qmomXTgy9IpfbuI4UOLQpz7bXq9CVCrCE2HhoPLEj08AjLvn60sBDJE3vX7TWVDYAS4/tNx2mcWbRjPSlI0uIIC1ehCKUFoPu8wH8eJZCrJUijyPBf7WbZ2uDCar+pgAbecv+Fi//jUk1i+W/Q0="

git:
  depth: 1

branches:
  only:
    - master

language: cpp

os:
  - osx

osx_image: xcode7

compiler:
  - clang++

env:
# Default build. Release.
  - PATH=/Users/StaticQt/5.7.0/bin:/Users/StaticQt/5.7.0/lib:/usr/local/opt/coreutils/libexec/gnubin:$PATH

before_script:
  - sudo systemsetup -settimezone Europe/Moscow;
    echo $(date)


before_install:
  - echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-
# ==============================================================================
# Downloading and unpacking of pre-built static Qt 5.7.0 on OS X 10.10.5
# ------------------------------------------------------------------------------
# Static Qt is dependent to absolute build path, so,
# we are re-making same tree which was on previous machine where this build of Qt was built
# ==============================================================================
  - git submodule init;
    git submodule update;
    sudo mkdir -p /Users/StaticQt/;
    sudo chown -R travis /Users/StaticQt/;
    wget http://wohlsoft.ru/docs/Software/QtBuilts/qt-5.7.0-static-osx-10.10.5.tar.gz -O /Users/StaticQt/qt-5.7.0-static-osx-10.10.5.tar.gz;
    Bak=~+;
    cd /Users/StaticQt/;
    tar -xf qt-5.7.0-static-osx-10.10.5.tar.gz;
    cd $Bak;

# ==============================================================================
# Installing of required for building process tools via homebrew toolset
# ==============================================================================
# - brew install qt5 #Don't install dynamic version of Qt 5 because we are have our pre-built static version of Qt
  - brew install lftp;
    brew install coreutils;
    brew install binutils;
    brew install gnu-sed;
# ==============================================================================
# Making "_paths.sh" config file
# ==============================================================================
  - echo "QT_PATH=\"/Users/StaticQt/5.7.0/bin/\"" > _paths.sh;
    echo "QMake=\"qmake\"" > _paths.sh;
    echo "LRelease=\"lrelease\"" >> _paths.sh;
    echo "" >> _paths.sh;
    chmod u+x _paths.sh;

# ==============================================================================
# Building of dependencies of PGE
# ==============================================================================
  - bash build_deps.sh no-pause;
    bash -c "TZ=Europe/Moscow date +\"%Y-%m-%d %H:%M:%S\">/Users/travis/build_date_dev_osx.txt"

install: true

script:
# ==============================================================================
# Building of PGE
# ==============================================================================
  - bash build.sh no-pause

after_success:
# ==============================================================================
# Deploying of built PGE
# ==============================================================================
  - cd _Misc/dev_scripts/deploy;
    bash deploy_osx.sh nopause;
    cd ../../..;

# ==============================================================================
# Upload created DMG file to the server
# ==============================================================================
  - lftp -e "put -O ./macosx/ ./bin/_packed/pge-project-dev-macosx.dmg; put -O ./_versions/ /Users/travis/build_date_dev_osx.txt; exit" -u $FTPUser,$FTPPassword $FTPServer

addons:
  coverity_scan:
    project:
      name: "WohlSoft/PGE-Project"
      description: "PGE Project - a free and open source game engine to create games of platform genre"
    notification_email: admin@wohlnet.ru
    branch_pattern: master

